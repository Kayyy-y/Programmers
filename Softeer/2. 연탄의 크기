import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(br.readLine());

        String[] strRs = br.readLine().split(" ");
        List<Integer> rs = new ArrayList<>();
        for(int i = 0; i < n; i++){
            rs.add(Integer.parseInt(strRs[i]));
        }

        List<Integer> totalList = new ArrayList<>();
        
        // 약수를 전부 totalList에 저장
        for(int i = 0; i < n; i++){
            for(int j = 2; j <= rs.get(i); j++){
                if(rs.get(i) % j == 0) totalList.add(j);
            }    
        }

        // 정렬
        Collections.sort(totalList);
        // 절대 약수가 될 수 없는 -1을 추가해서 34 line의 for문을 끝까지 돌림(없으면 제일 큰 값이 max일 경우 처리 불가)
        totalList.add(-1);

        int max = Integer.MIN_VALUE;
        int cnt = 1;

        for(int i = 0; i < totalList.size()-1; i++){
            if(totalList.get(i) != totalList.get(i+1)){
                if(max < cnt) max = cnt;
                cnt = 1;
            }
            else cnt++;
        }
        // n이 1이면 34 line의 for문은 안 돌아감!
        if(max < 0) max = 1;
        
        System.out.print(max);
        
    }
}
